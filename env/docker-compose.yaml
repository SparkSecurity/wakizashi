version: '3'

services:
  mongo:
    image: mongo
    restart: always
    container_name: mongodb
    hostname: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${db_pass}
      MONGO_INITDB_DATABASE: wakizashi
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27017:27017"
    networks:
      - wakizashi
    volumes:
      - ./:/opt/keyfile/
      - mongodb:/data
    healthcheck:
      test: |
        test $$(mongosh --quiet -u root -p root --eval "try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'db' }] }).ok } catch (_) { rs.status().ok }") -eq 1
      interval: 10s
    command: "--bind_ip_all --keyFile /opt/keyfile/keyfile --replSet rs0"

  rabbit:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_PASS: ${mq_pass}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - wakizashi
    ports:
      - "5672:5672"
      - "15672:15672"

networks:
  wakizashi:

volumes:
  rabbitmq:
  mongodb: