version: '3'

services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    hostname: mongo
    environment:
      MONGO_INITDB_DATABASE: wakizashi
      MONGO_REPLICA_SET_NAME: rs0
    networks:
      - wakizashi
    volumes:
      - mongodb:/data
    healthcheck:
      test: |
        test $$(mongosh --quiet --eval "try { rs.initiate().ok } catch (_) { rs.status().ok }") -eq 1
      interval: 10s
    command: "--bind_ip_all --replSet rs0"

  rabbit:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_PASS: ${mq_pass}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - wakizashi
    ports:
      - "5672:5672"
      - "15672:15672"

  manager:
    image: manager
    restart: always
    environment:
      LISTEN_PORT: 3033
      MONGO_URI: "mongodb://mongo:27017/?replicaSet=rs0&directConnection=true"
      MONGO_DB_NAME: "wakizashi"
      MQ_URI: "amqp://guest:${mq_pass}@rabbit:5672"
    ports:
      - "3033:3033"
    depends_on:
      - mongo
      - rabbit
    networks:
      - wakizashi

#  worker:
#    image: worker
#    restart: always
#    environment:
#      MQ_URI: "amqp://guest:${mq_pass}@rabbit:5672"
#    depends_on:
#      - manager
#    networks:
#      - wakizashi

networks:
  wakizashi:

volumes:
  rabbitmq:
  mongodb: